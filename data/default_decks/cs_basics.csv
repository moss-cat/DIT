front,back,deck
"What is the difference between a stack and a queue data structure?","A stack is a LIFO (Last-In-First-Out) data structure where elements are added and removed from the same end. A queue is a FIFO (First-In-First-Out) data structure where elements are added at one end and removed from the other. Stack operations: push/pop. Queue operations: enqueue/dequeue.",cs_basics
"Explain the concept of virtual memory in operating systems.","Virtual memory is a memory management technique that provides an abstraction of physical memory, creating the illusion of a large, contiguous memory space. It maps virtual addresses to physical addresses, enabling programs to use more memory than physically available by using disk space as an extension through paging or segmentation.",cs_basics
"What is the TCP/IP model and how does it differ from the OSI model?","TCP/IP is a 4/5-layer networking model (Application, Transport, Internet, Network Interface [sometimes split into Data Link and Physical]). OSI is a 7-layer model (Application, Presentation, Session, Transport, Network, Data Link, Physical). TCP/IP is more practical and widely implemented, while OSI is primarily conceptual. TCP/IP combines the top 3 OSI layers into one Application layer.",cs_basics
"Describe the differences between process and thread in operating systems.","A process is an independent program execution instance with its own memory space, resources, and state information. A thread is a lightweight execution unit within a process that shares memory space and resources with other threads in the same process. Processes are isolated from each other, while threads can communicate more efficiently but must handle synchronization issues.",cs_basics
"What are the ACID properties in database systems?","ACID stands for: Atomicity (transactions are all-or-nothing), Consistency (transactions bring DB from one valid state to another), Isolation (concurrent transactions appear sequential), and Durability (committed transactions persist even after system failure). These properties ensure reliable database transactions and data integrity.",cs_basics
"Explain the concept of object-oriented programming and its main principles.","Object-oriented programming (OOP) is a programming paradigm based on 'objects' that contain data and code. Its main principles are: Encapsulation (bundling data and methods that operate on it), Inheritance (ability to create new classes from existing ones), Polymorphism (ability for objects to take different forms), and Abstraction (hiding complex implementation details while exposing functionality).",cs_basics
"What is the difference between compiler and interpreter?","A compiler translates the entire source code into machine code before execution, creating an executable file. An interpreter translates and executes the code line-by-line without creating an intermediate file. Compiled programs typically run faster but have a longer initial processing time, while interpreted languages offer more flexibility and platform independence but generally slower execution.",cs_basics
"Describe how a hash table works and the concept of collision resolution.","A hash table stores key-value pairs by computing an index from the key using a hash function. Collisions occur when different keys hash to the same index. Resolution methods include: chaining (storing colliding elements in linked lists), open addressing (finding another slot through probing), or using perfect hash functions. Good hash functions and resolution strategies maintain O(1) average time complexity for operations.",cs_basics
"What is the time complexity of binary search and how does it work?","Binary search has O(log n) time complexity. It works on sorted collections by repeatedly dividing the search interval in half. It compares the target value with the middle element, eliminating half the remaining elements with each comparison. This logarithmic efficiency makes it vastly superior to linear search (O(n)) for large datasets.",cs_basics
"Explain the concept of cache memory and its importance in computer architecture.","Cache memory is a small, fast memory located between the CPU and main memory (RAM). It stores frequently accessed data to reduce average memory access time. It's organized in hierarchical levels (L1, L2, L3) with different sizes and speeds. Cache improves performance by exploiting locality of reference (temporal and spatial), significantly reducing the CPU-memory performance gap.",cs_basics
"What is recursion and what are its advantages and disadvantages?","Recursion is a programming technique where a function calls itself to solve smaller instances of the same problem. Advantages: elegant solutions for problems with recursive structures (trees, graphs), often more readable code. Disadvantages: stack overflow risk for deep recursion, memory overhead from multiple stack frames, and potentially slower execution than iterative solutions due to function call overhead.",cs_basics
"Describe the concept of normalization in database design.","Database normalization is the process of structuring relational databases to reduce data redundancy and improve data integrity. It involves organizing attributes and tables to minimize dependency and duplication through normal forms (1NF, 2NF, 3NF, BCNF, etc.). Each normal form addresses specific types of anomalies. Higher normalization reduces redundancy but may increase join operations and impact query performance.",cs_basics
"What is the difference between HTTP and HTTPS protocols?","HTTP (Hypertext Transfer Protocol) is an unsecured protocol for transmitting web data. HTTPS (HTTP Secure) encrypts data using TLS/SSL, providing secure communication. HTTPS offers authentication of websites, data integrity, and encryption to protect against eavesdropping and man-in-the-middle attacks. HTTPS uses port 443 by default (vs. HTTP's port 80) and requires SSL/TLS certificates.",cs_basics
"Explain the concept of polymorphism in object-oriented programming.","Polymorphism allows objects of different classes to be treated as objects of a common superclass, with methods that behave differently based on the actual object type. Two main types are: compile-time/static polymorphism (method overloading) and runtime/dynamic polymorphism (method overriding). It enables code flexibility, extensibility, and the implementation of the 'is-a' relationship in inheritance hierarchies.",cs_basics
"What is the difference between synchronous and asynchronous programming?","Synchronous programming executes operations sequentially, blocking execution until each operation completes. Asynchronous programming allows operations to run in the background without blocking the main execution thread. Asynchronous code uses mechanisms like callbacks, promises, or async/await syntax to handle operation completion. It improves responsiveness in I/O-bound applications but introduces complexity in code flow and error handling.",cs_basics
"Describe the concept of deadlock in operating systems and its necessary conditions.","A deadlock is a situation where two or more processes are unable to proceed because each is waiting for resources held by others. Four necessary conditions (Coffman conditions) must be present: Mutual exclusion (resources cannot be shared), Hold and wait (processes hold resources while waiting for others), No preemption (resources cannot be forcibly released), and Circular wait (circular chain of processes waiting for resources).",cs_basics
"What is the difference between a join and a subquery in SQL?","A join combines rows from two or more tables based on related columns. A subquery is a query nested within another query that returns data to be used by the outer query. Joins often perform better for retrieving data from multiple tables and allow access to columns from all joined tables. Subqueries are more readable for certain operations and necessary when aggregation must happen before filtering or joining.",cs_basics
"Explain the concept of garbage collection in programming languages.","Garbage collection is an automatic memory management process that identifies and frees memory no longer in use by a program. It eliminates manual memory deallocation, preventing memory leaks and dangling pointer errors. Common algorithms include mark-and-sweep, reference counting, and generational collection. While garbage collection reduces memory-related bugs, it can introduce performance overhead and unpredictable pauses.",cs_basics
"What is the CAP theorem in distributed systems?","The CAP theorem states that a distributed system cannot simultaneously guarantee all three of: Consistency (all nodes see the same data at the same time), Availability (every request receives a response), and Partition tolerance (the system continues operating despite network partitions). In practice, when a partition occurs, one must choose between consistency and availability. Different database systems prioritize different aspects of CAP.",cs_basics
"Describe the concept of dynamic programming and when it should be used.","Dynamic programming is an algorithmic technique that solves complex problems by breaking them into simpler overlapping subproblems and storing their solutions to avoid redundant computation. It's applicable when problems have: optimal substructure (optimal solution contains optimal solutions to subproblems) and overlapping subproblems (same subproblems solved multiple times). Common implementations use memoization (top-down) or tabulation (bottom-up) approaches.",cs_basics
